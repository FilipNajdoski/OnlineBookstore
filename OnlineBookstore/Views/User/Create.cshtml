@model OnlineBookstore.Areas.Identity.UserModel 
@{
    ViewData["Title"] = "Create";
}

<h1 class="bg-dark text-white text-center p-3">Create User</h1>
<div asp-validation-summary="All" class="text-danger"></div>

<div class="custom-container">
    <div class="row mb-2">
        <div class="col-12 col-md-12">
            <a asp-action="Index" class="btn btn-block btn-success"><i class="fas fa-angle-left"></i>&nbsp; Back</a>
        </div>
    </div>
    <form method="post">
        <div class="form-group">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="Email"></label>
            <input asp-for="Email" class="form-control" />
        </div>
        <div class="form-group">
            <label asp-for="Password"></label>
            <input asp-for="Password" class="form-control" />
        </div>
        <div class="form-group">
            <label>Select Roles</label>
            @Html.DropDownListFor(x => Model.RoleId, new SelectList(Model.Roles, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Role"})
        </div>
        <input type="hidden" asp-for="RoleName"/>
        <button type="submit" class="btn btn-block btn-primary"><i class="fas fa-save"></i> &nbsp; Create</button>
    </form>

</div>

@section Scripts{ 
    <script type="text/javascript">
        $("#Role").change(function () {
            var optionSelected = $("option:selected", this);
            var valueSelected = this.value;
            var textSelected = optionSelected.text();
            $("#roleName").val(textSelected);
            //proverka dali se tocni podatocite koi gi sakeme so console.log
            console.log($("#roleName").val(textSelected));
            console.log(valueSelected);
            console.log(textSelected);
        })
    </script>
}

